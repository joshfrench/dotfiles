# TERMINAL SETUP
set -g default-terminal "tmux-256color"
set -gas terminal-overrides ",$TERM:RGB"
set -g set-titles on
# undercurl & colored underscore
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -g default-command "exec ${SHELL}" # don't use login when creating a sub-shell; is this a good idea?

# MOUSE
set -g mouse on

# HISTORY
set -g history-limit 10000

## STATUS BAR
# pleasant solarized color
base03='#002b36'
base02='#073642'
base01='#586e75'
base00='#657b83'
base0='#839496'
base1='#93a1a1'
base2='#eee8d5'
base3='#fdf6e3'
yellow='#b58900'
orange='#cb4b16'
red='#dc322f'
magenta='#d33682'
violet='#6c71c4'
blue='#268bd2'
cyan='#2aa198'
green='#859900'
highlite='#004b5e'

set -g status-style "fg=$base1,bg=$highlite"
zoomed="#{?window_zoomed_flag,#[bold]+#[nobold],}"
# set -g window-status-format "#[fg=$base02,bg=$blue] #I #[fg=$base1,bg=$highlite] #W#{?window_zoomed_flag, üîç,}"
# set -g window-status-current-format "#[fg=$base3,bg=$green] #I #[fg=$base2,bg=$highlite] #W#{?window_zoomed_flag, üîç,}"
set -g status-left "#{?client_prefix,#[fg=$yellow],}[#S] "
set -g window-status-current-style "fg=$base2,bg=$blue"
set -g window-status-format "#I:#W$zoomed"
set -g window-status-current-format " #I:#W$zoomed "
set -g status-right "#(~/dotfiles/tmux/status/status.sh) "
set -g status-right-length 100

set -g mode-style "fg=$base2,bg=$highlite" # copy-mode highlight

## REMAP LEADER
unbind-key C-b
set -g prefix C-Space
bind Space send-prefix

## COPY/PASTE
# use vim mode
setw -g mode-keys vi
bind -T copy-mode-vi Escape send-keys -X cancel
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T prefix Space copy-mode
# Pipe selection into OS X clipboard. copy-pipe leaves tmux in copy mode; -and-cancel exits copy mode on yank.
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode-vi Y send-keys -X copy-pipe "pbcopy"
set -sg escape-time 0

## MNEMONIC WINDOW SPLITS
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# Important: use shell-less implementation to avoid startup time in background
is_vim="#{m/ri:(^|\/)g?(view|n?vim?)(diff)?$,#{pane_current_command}}"
bind -n C-h if -F "$is_vim" "send-keys C-h; refresh-client -S" "select-pane -L; refresh-client -S"
bind -n C-j if -F "$is_vim" "send-keys C-j; refresh-client -S" "select-pane -D; refresh-client -S"
bind -n C-k if -F "$is_vim" "send-keys C-k; refresh-client -S" "select-pane -U; refresh-client -S"
bind -n C-l if -F "$is_vim" "send-keys C-l; refresh-client -S" "select-pane -R; refresh-client -S"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R

bind -r Down resize-pane -D 5
bind -r Up resize-pane -U 5
bind -r Left resize-pane -L 5
bind -r Right resize-pane -R 5

# C-l clobbered by tmux/vim nav; use C-space (mirrors vim clear highlite)
bind C-space send-keys 'C-l'

## OTHER
# 1-based pane indexes
set -g base-index 1
# auto renumber windows
set -g renumber-windows on
# no delay on ESC key (for vim)
set -g escape-time 0
# nvim wants this
set-option -g focus-events on
